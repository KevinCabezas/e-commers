Comandos B√°sicos (Inicializaci√≥n y Estado)

git init --> Para qu√© sirve: Inicializa un repositorio Git en tu carpeta local.


git status --> Para qu√© sirve: Muestra el estado de los archivos (modificados, staged, sin seguimiento).

Ejemplo:

git status
git add <archivo>

Para qu√© sirve: A√±ade archivos al √°rea de staging (preparaci√≥n para commit).

Ejemplos:

bash
git add index.html          # A√±ade un archivo espec√≠fico
git add .                  # A√±ade TODOS los cambios
üîπ Comandos de Commit (Guardar Cambios)
git commit -m "mensaje"

Para qu√© sirve: Guarda los cambios en el repositorio con un mensaje descriptivo.

Ejemplo:

bash
git commit -m "Agregu√© el navbar"
git log

Para qu√© sirve: Muestra el historial de commits (con autores, fechas y mensajes).

Ejemplo:

bash
git log --oneline          # Muestra una versi√≥n resumida
üîπ Trabajo con Ramas (Branches)
git branch

Para qu√© sirve: Lista todas las ramas locales (* indica la rama actual).

Ejemplo:

bash
git branch
git checkout -b <nombre-rama>

Para qu√© sirve: Crea una nueva rama y cambia a ella.

Ejemplo:

bash
git checkout -b feature/login
git merge <rama>

Para qu√© sirve: Fusiona una rama con la rama actual.

Ejemplo:

bash
git merge feature/login
üîπ Trabajo con Remotos (GitHub, GitLab, etc.)
git remote add origin <url-repositorio>

Para qu√© sirve: Conecta tu repositorio local con un repositorio remoto.

Ejemplo:

bash
git remote add origin https://github.com/tu-usuario/tu-repo.git
git push -u origin <rama>

Para qu√© sirve: Sube tus commits al repositorio remoto.

Ejemplo:

bash
git push -u origin main
git pull

Para qu√© sirve: Descarga cambios del remoto y los fusiona con tu rama local.

Ejemplo:

bash
git pull origin main
git clone <url-repositorio>

Para qu√© sirve: Clona (descarga) un repositorio remoto a tu m√°quina.

Ejemplo:

bash
git clone https://github.com/tu-usuario/tu-repo.git
üîπ Deshacer Cambios (Errores Frecuentes)
git restore <archivo>

Para qu√© sirve: Descarta cambios en un archivo modificado (antes de git add).

Ejemplo:

bash
git restore index.html
git reset --hard HEAD

Para qu√© sirve: Elimina TODOS los cambios locales no commitidos.

Ejemplo:

bash
git reset --hard HEAD
git revert <commit-hash>

Para qu√© sirve: Crea un nuevo commit que deshace un commit anterior.

Ejemplo:

bash
git revert abc1234
üîπ Comandos Avanzados (√ötiles)
git stash

Para qu√© sirve: Guarda cambios temporales sin hacer commit (√∫til para cambiar de rama).

Ejemplo:

bash
git stash pop           # Recupera los cambios guardados
git diff

Para qu√© sirve: Muestra diferencias entre archivos modificados y el √∫ltimo commit.

Ejemplo:

bash
git diff
git tag -a v1.0 -m "Versi√≥n 1.0"

Para qu√© sirve: Crea un tag (etiqueta) para versiones espec√≠ficas.

Ejemplo:

bash
git push --tags         # Sube tags al remoto
üìå Flujo de Trabajo T√≠pico
bash
git add .                    # A√±ade cambios
git commit -m "Mensaje"      # Guarda cambios
git push origin main         # Sube al remoto
üí° Tips Importantes
Siempre haz git status para verificar el estado antes de actuar.

Usa ramas (git branch) para trabajar en features sin afectar main.

Protege tu rama main en GitHub/GitLab (activa "Pull Requests").




$ git config --global core.autocrlf true
git branch -m master main